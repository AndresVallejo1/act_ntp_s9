📊 DataFrame de Ejemplo para Todos los Ejercicios
Para mantener consistencia en todos los ejercicios, utilizaremos el siguiente DataFrame base que contiene datos de empleados de una empresa ficticia:

import pandas as pd

# Crear DataFrame simple de empleados
data = {
    'nombre': ['Ana', 'Luis', 'Carmen', 'José', 'María', 'Pedro', 'Laura', 'Miguel'],
    'departamento': ['Ventas', 'IT', 'RRHH', 'Ventas', 'IT', 'Marketing', 'RRHH', 'IT'],
    'salario': [45000, 65000, 50000, 48000, 70000, 55000, 52000, 68000],
    'edad': [28, 35, 42, 31, 29, 38, 45, 33]
}

df = pd.DataFrame(data)
print("DataFrame de empleados:")
print(df)

📋 Descripción de los Datos
id_empleado: Identificador único del empleado (1-20)
nombre: Nombre completo del empleado
edad: Edad en años (25-45)
salario: Salario anual en euros (44,000-95,000)
departamento: Departamento de trabajo (IT, Ventas, RRHH, Marketing, Finanzas)
fecha_ingreso: Fecha de ingreso a la empresa (2016-2021)
activo: Estado del empleado (True/False)
email: Correo electrónico corporativo
telefono: Número de teléfono con formato español
ciudad: Ciudad de trabajo (Madrid, Barcelona, Valencia, Sevilla, Bilbao)
🎯 Uso en los Ejercicios
Ejercicios 1-5: Usar df_empleados para practicar filtros y operadores lógicos
🚀 Ejercicios a Resolver
Ejercicio 1: Filtros Básicos
Realiza estos filtros simples:

Empleados con salario mayor a 50,000
Empleados menores de 35 años
Empleados del departamento 'IT'
Implementa tu solución en: src/ejercicio_01.py

Archivo: src/ejercicio_01.py

Ejercicio 2: Operadores Lógicos (AND, OR, NOT)
Combina condiciones con operadores lógicos:

Empleados de IT Y salario mayor a 60,000
Empleados de Ventas O mayores de 40 años
Empleados que NO son de Marketing
Recuerda usar: & para AND, | para OR, ~ para NOT

Implementa tu solución en: src/ejercicio_02.py

Archivo: src/ejercicio_02.py

Ejercicio 3: Método isin()
Usa isin() para filtrar múltiples valores:

Empleados de IT o Ventas
Empleados con edad de 28, 35 o 42 años
Pista: El método isin() acepta una lista de valores para comparar.

Implementa tu solución en: src/ejercicio_03.py

Archivo: src/ejercicio_03.py

Ejercicio 4: Filtros con Texto
Filtra usando métodos de string:

Empleados cuyos nombres empiezan con 'M'
Departamentos que contienen 'R'
Pista: Usa .str.startswith() y .str.contains() para filtros de texto.

Implementa tu solución en: src/ejercicio_04.py

Archivo: src/ejercicio_04.py

Ejercicio 5: Combinando Filtros
Combina diferentes tipos de filtros:

Empleados de IT con más de 30 años Y salario mayor a 60,000
Empleados cuyo nombre empieza con 'L' O son de RRHH
Desafío: Combina operadores lógicos con filtros de texto y numéricos.

Implementa tu solución en: src/ejercicio_05.py

Archivo: src/ejercicio_05.py